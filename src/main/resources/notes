
To include manager in Keycloak
1) In User federation > Settings > Mapper details, create a user-attribute-ldap-mapper.
2) map 'manager' to 'manager' in ldap
3) tick 'Always Read Value From LDAP'    


Elasticsearch
=============
* Change password
------------------
curl -k -u elastic:<default password shown at the start> -X POST "https://localhost:9200/_security/user/elastic/_password?pretty" -H 'Content-Type: application/json' -d'
{
  "password" : "eqwabeWorxxjO+WXCsWO"
}
'

* See all indices
-----------------
curl -k -u elastic:eqwabeWorxxjO+WXCsWO -X GET "https://localhost:9200/_cat/indices?pretty" -H 'Content-Type: application/json'

* Read an index
-----------------
curl -k -u elastic:eqwabeWorxxjO+WXCsWO -X GET "https://localhost:9200/reference/_search?pretty" -H 'Content-Type: application/json'

curl -k -u elastic:eqwabeWorxxjO+WXCsWO -X GET "https://localhost:9200/workitem/_search?pretty" -H 'Content-Type: application/json'

* Delete index
--------------
curl -k -u elastic:eqwabeWorxxjO+WXCsWO -X DELETE "https://localhost:9200/reference/?pretty" -H 'Content-Type: application/json'



* Search index
--------------
curl -k -u elastic:eqwabeWorxxjO+WXCsWO -X GET "https://localhost:9200/reference/_search?pretty" -H 'Content-Type: application/json' -d'
    {
        "query": {
               "bool": {
                    "must": [
                        {
                             "simple_query_string": {
                               "query": "Maran*"
                             }
                        },
                        {"bool": {
                            "filter": {
                              "terms": {
                                "status": ["DEPRECATED", "CONFIRMED"]
                              }
                            }
                        }}
                    ]
                 }
            }
    }
'

* Query by refWorkId
--------------------
curl -k -u elastic:eqwabeWorxxjO+WXCsWO -X GET "https://localhost:9200/reference/_search?pretty" -H 'Content-Type: application/json' -d'
    {
        "query": {
               "bool": {
                    "must": [
                        {"term" : { "refWorkId": 1552}}
                    ]
                 }
            }
    }
'
{"term" : { "status": "CONFIRMED"}}
* Update 
--------


curl -k -u elastic:eqwabeWorxxjO+WXCsWO -X PUT "https://localhost:9200/reference/_doc/48?pretty" -H 'Content-Type: application/json' -d'
{
  "status": "RETIRED"
}
'



Parameters
==========
executor.thread-count

chenook.keycloak.username
chenook.keycloak.password
chenook.keycloak.url
chenook.keycloak.client-id
chenook.keycloak.client-name
chenook.keycloak.realm
chenook.keycloak.query-batch-size

minio.url
minio.access-key
minio.secret-key
minio.bucket

http.server.ssl.trust-store
http.server.ssl.trust-store-password
spring.data.elasticsearch.username
spring.data.elasticsearch.cluster-nodes
spring.data.elasticsearch.password

spring.security.oauth2.resourceserver.jwt.jwk-set-uri

chenook.lgWorkflowAbsLocation
chenook.lgWorkflowFile
chenook.lgWorkflowXsdUrl



 Set<String> roles = oidcUser
                .getAuthorities()
                .stream()
                .map(a -> a.getAuthority())
                .map(String::toLowerCase)
                .map(a -> a.replace("role_", ""))
                .collect(Collectors.toSet());